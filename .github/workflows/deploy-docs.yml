name: Deploy VitePress Documentation

on:
    push:
        branches: [main]
    workflow_dispatch:

permissions:
    contents: read
    pages: write
    id-token: write

concurrency:
    group: pages
    cancel-in-progress: false

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 8

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: pnpm

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Cache pnpm modules
              uses: actions/cache@v4
              with:
                  path: |
                      ${{ env.STORE_PATH }}
                      ~/.cache/pnpm
                      node_modules
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/package.json') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}-
                      ${{ runner.os }}-pnpm-

            - name: Setup Pages
              uses: actions/configure-pages@v4

            - name: Install dependencies
              run: pnpm install

            - name: Generate documentation from modules
              run: node --es-module-specifier-resolution=node --import tsx cli/sky.ci.ts doc

            - name: Install docs dependencies
              run: cd docs && pnpm install

            - name: Build VitePress documentation
              run: cd docs && pnpm run build

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with:
                  path: docs/.vitepress/dist

    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4